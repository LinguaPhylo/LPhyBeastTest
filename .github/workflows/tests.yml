name: LPhy BEAST tests
on: [ push, pull_request, workflow_dispatch ]

# not support var in the path
env:
  BEAST_DIR: beast2.7
  LPHY_DIR:  lphy-studio-1.5
  SEED:      777
  # true, then use prerelease.xml for snapshot versions; or false, then use CBAN
  PRERELEASE:      true

jobs:
  setup-lphybeast:
    # libgfortran3 not available in ubuntu-last
    runs-on: ubuntu-18.04

    # note: not support var containing var
    # $BEAST is reserved in all scripts
    steps:
      - name: Set environmental variables
        run: |
          echo "BEAST2_BIN=$GITHUB_WORKSPACE/beast2.7/bin" >> $GITHUB_ENV
          echo "BEAST2_LIB=$GITHUB_WORKSPACE/beast2.7/lib" >> $GITHUB_ENV
          echo "LPHY_SCRIPTS=$GITHUB_WORKSPACE/beast2.7/$LPHY_DIR/tutorials" >> $GITHUB_ENV
          echo "REPO_DIR=/home/runner/.beast/2.7" >> $GITHUB_ENV
          echo "XML_DIR=$GITHUB_WORKSPACE/lphybeast" >> $GITHUB_ENV

      - name: Checkout main
        uses: actions/checkout@v3
      # this must be after main
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          java-package: 'jdk+fx'

      # PRERELEASE: true, then use prerelease.xml
      - name: Setup packages.url
        run: |
          mkdir /home/runner/.beast
          mkdir $REPO_DIR
          echo "PRERELEASE = $PRERELEASE"
          pwd
          cd $BEAST2_LIB
          if [ "${PRERELEASE,,}" = true ]; then
            echo 'packages.url=https://github.com/LinguaPhylo/LPhyBeastTest/raw/main/beast2.7/lib/prerelease.xml' > beauti.properties
            echo 'Testing SNAPSHOT versions ...'        
          fi
          cat beauti.properties
          cp beauti.properties $REPO_DIR

      # /home/runner/.beast/2.7
      - name: Install packages
        run: |
          java -version
          ls $BEAST2_LIB
          $BEAST2_BIN/packagemanager -add lphybeast
          $BEAST2_BIN/packagemanager -add LPhyBeastExt
      # https://github.com/CompEvol/beast2/issues/1078
      - name: Install beast2 base
        run: |
          ls $REPO_DIR
          mkdir $REPO_DIR/BEAST.base
          cp $BEAST2_LIB/packages/BEAST.base.version.xml $REPO_DIR/BEAST.base/version.xml
          mkdir $REPO_DIR/BEAST.base/lib
          cp $BEAST2_LIB/packages/BEAST.base.*.jar $REPO_DIR/BEAST.base/lib

      # install lphybeast, lphybeast-ext https://www.beast2.org/managing-packages/
      # add -Dbeast.user.package.dir=$LPHY_BEAST_DIR into bin/packagemanager to use diff $REPO_DIR
      # $BEAST2_BIN/applauncher lphybeast -V
      - name: Validate lphybeast
        run: |
          $BEAST2_BIN/packagemanager -list
          $BEAST2_BIN/lphybeast-mod -V

      - name: Check required files
        run: |
          pwd
          echo "ls $REPO_DIR"
          ls $REPO_DIR
          head -1 $(find $REPO_DIR -name 'version.xml' -print)
          echo "ls $LPHY_SCRIPTS"
          ls $LPHY_SCRIPTS      

      # use beagle 3.1.2
      - name: Build beagle
        run: |
          pwd
          git clone --branch v3.1.2 --depth=1 https://github.com/beagle-dev/beagle-lib.git
          cd beagle-lib
          sudo ./autogen.sh
          sudo ./configure --prefix=/usr/local
          sudo make install
          sudo ldconfig
          $BEAST2_BIN/beast -beagle_info

      - name: h5n1
        # enough ESS: -l 3,000,000
        run: |
          $BEAST2_BIN/lphybeast-mod -l 3000000 -o $XML_DIR/h5n1.xml $LPHY_SCRIPTS/h5n1.lphy
          cd $XML_DIR
          $BEAST2_BIN/beast -working -beagle_SSE -seed $SEED h5n1.xml
          ls -l
          $BEAST2_BIN/loganalyser h5n1.log 
          LAST_MCMC_TREE=$(tail -2 h5n1_with_trait.trees | head -1)
          echo ${LAST_MCMC_TREE: 500}
          $BEAST2_BIN/treeannotator -burnin 10 -heights mean h5n1_with_trait.trees h5n1_with_trait.tree
          LOC_TREE=$(tail -2 h5n1_with_trait.tree | head -1)
          echo ${LOC_TREE: -800}

      - name: h5n1 estimating transitions
        # require Babel for StateTransitionCounter
        run: |
          $BEAST2_BIN/packagemanager -add Babel
          cd $XML_DIR
          $BEAST2_BIN/applauncher StateTransitionCounter -burnin 10 -in h5n1_with_trait.trees -tag location -out h5n1.stc.out
          cat h5n1.stc.out

      - name: RSV2
        # enough ESS: -l 20,000,000
        run: |
          pwd
          $BEAST2_BIN/lphybeast-mod -l 5000000 -o $XML_DIR/RSV2.xml $LPHY_SCRIPTS/RSV2.lphy
          cd $XML_DIR
          $BEAST2_BIN/beast -working -beagle_SSE -seed $SEED RSV2.xml
          ls -l
          $BEAST2_BIN/loganalyser RSV2.log
          $BEAST2_BIN/treeannotator -burnin 20 -heights mean RSV2.trees RSV2.tree

      - name: hcv_coal
        # enough ESS: -l 40,000,000
        run: |
          $BEAST2_BIN/lphybeast-mod -l 10000000 -o $XML_DIR/hcv_coal.xml $LPHY_SCRIPTS/hcv_coal.lphy
          cd $XML_DIR
          $BEAST2_BIN/beast -working -beagle_SSE -seed $SEED hcv_coal.xml
          ls -l
          $BEAST2_BIN/loganalyser hcv_coal.log
          $BEAST2_BIN/treeannotator -burnin 20 -heights mean hcv_coal.trees hcv_coal.tree

      # libgfortran5 is not working
      - name: Install libgfortran3
        run: sudo apt-get install libgfortran3
      - name: h3n2
        # enough ESS: -l 30,000,000
        run: |
          $BEAST2_BIN/lphybeast-mod -l 10000000 -o $XML_DIR/h3n2.xml $LPHY_SCRIPTS/h3n2.lphy
          cd $XML_DIR
          $BEAST2_BIN/beast -working -beagle_SSE -seed $SEED h3n2.xml
          ls -l
          $BEAST2_BIN/loganalyser h3n2.log
          LAST_MCMC_TREE=$(tail -2 h3n2.mascot.trees| head -1)
          echo ${LAST_MCMC_TREE: 500}
          $BEAST2_BIN/treeannotator -burnin 20 -heights mean h3n2.mascot.trees h3n2.mascot.tree

      # check all *.log and *.tree
      - name: Test logs and trees
        run: ./gradlew test --no-daemon
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: ./**/build/test-results/**/*.xml
